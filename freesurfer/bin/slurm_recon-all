#!/bin/bash

# slurm_recon-all (simple)
# Matt Allbright
# This script quickly and easily runs recon-all on selected participants through
# a user friendly text interface. It will feed variables from a for loop into a
# separate sbatch file located at /opt/cloud/staging/freesurfer/bin/recon-all.sbatch

clear

echo "Welcome to slurm_recon-all."
echo "This application allows users to quickly and easily submit one to several"
echo "recon-all subject jobs to the local Slurm cluster."

echo -e "\nPlease input a SUBJECTS_DIR."
read subjects_dir

echo -e "\nPlease input the directory which contains .nii input images."
read image_dir

# Creates variable from command
images=$(cd $image_dir && ls *.nii | grep -E '[0-9][0-9]' | column -c 100)
# Turns variable into array
imagearr=$images
# Cleans array
for img in ${imagearr[*]}; do
  img=${img#T1_}
  img=${img%.nii}
  clean_imagearr+=(${img})
done

echo -e "\nPlease input a subject or several subjects separated by a space."
for img in ${clean_imagearr[*]}; do
  echo ${img}
done
read subjects

subjarr=($subjects)

for subj in ${subjarr[*]}; do
  recon_input=$(ls $image_dir/T1_*${subj}*.nii 2> /dev/null)
  if [ $recon_input ]; then
    # Applies ls output for file to a path in a variable
    echo "Image file found."

    # Runs recon-all.sbatch script with proper things.
    echo "Running recon-all for" ${subj}
    job_submitted=$(sbatch /opt/cloud/staging/freesurfer/opt/recon-all.sbatch $subjects_dir ${subj} $recon_input)
    wait
    echo $job_submitted
    job_submitted=${job_submitted#Submitted batch job }
    jobarr+=(${job_submitted})
    wait
  else
    echo "Image file not found. Will not run recon-all for" ${subj}
  fi
  sleep 1 # pause to be kind to the scheduler
done
wait
echo "If a terminal doesn't open automatically, check X11 settings or"
echo "find output .out file located in /data/var/jobs/recon-all/"
for job in ${jobarr[*]}; do
  x-terminal-emulator -e 'tail -F /data/var/jobs/recon-all/'$job.out
  echo "Waiting for 5 seconds for job to output."
  sleep 5
  echo "Terminal opened for job "${job}.
done
